#include <iostream>
#include <string>
#include <map>
#include <vector>

class PasswordManager {
private:
    std::map<std::string, std::string> passwords;

public:
    void addPassword(const std::string& site, const std::string& password) {
        passwords[site] = password;
    }

    std::string getPassword(const std::string& site) {
        if (passwords.find(site) != passwords.end()) {
            return passwords[site];
        } else {
            return "Password not found!";
        }
    }

    void deletePassword(const std::string& site) {
        passwords.erase(site);
    }

    void listPasswords() {
        for (const auto& entry : passwords) {
            std::cout << "Site: " << entry.first << ", Password: " << entry.second << std::endl;
        }
    }
};

int main() {
    PasswordManager pm;
    pm.addPassword("example.com", "password123");
    pm.addPassword("testsite.com", "mypassword");

    std::cout << "Password for example.com: " << pm.getPassword("example.com") << std::endl;

    pm.listPasswords();

    pm.deletePassword("example.com");
    std::cout << "After deletion:" << std::endl;
    pm.listPasswords();

    return 0;
}